{"version":3,"sources":["components/Header/Header.js","actions/todoActions.js","actions/actionTypes.js","components/Todo/TodoItem/TodoItem.js","components/SectionHeader/SectionHeader.js","components/Todo/TodoForm/TodoForm.js","components/Todo/TodoList/TodoList.js","components/Todo/TodoContainer/TodoContainer.js","components/App/App.js","reducers/todoReducer.js","reducers/rootReducer.js","todoService/index.js","sagas/todoSaga.js","store/store.js","index.js"],"names":["Header","className","getTodosSucceeded","todos","type","payload","toggleSucceeded","todo","addTodoSucceeded","React","memo","handleDelete","handleToggle","fade","useSpring","opacity","from","config","duration","div","completed","style","aria-label","id","onChange","checked","htmlFor","title","onClick","children","handleAdd","useState","setTitle","onSubmit","event","preventDefault","name","value","target","placeholder","TodoList","TodoContainer","list","useSelector","state","dispatch","useDispatch","useEffect","actions","noTodos","length","componentContent","isLoading","error","map","item","key","App","initialState","todoReducer","action","newState","todoIndex1","findIndex","t","splice","todoIndex2","push","console","isloading","rootReducer","combineReducers","ERROR_NOT_FOUND","sleep","Promise","resolve","setTimeout","Math","random","mockedTodos","then","reject","find","todoId","todoIndex","updatedTodo","reduce","a","b","validateTodo","max","createdTodo","filter","getTodos","deleteTodo","toggleTodo","addTodo","watchDeleteTodo","watchGetTodos","watchToggleTodo","watchAddTodo","rootSaga","call","todoService","put","take","takeLatest","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.802f2ebf.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.scss'\n\nconst Header = () => (\n    <header>\n        <h1 className='title'>Todo.</h1>\n        <h2 className='sub-title'>Todo, or not todo, that is the question.</h2>\n    </header>\n)\n\nexport default Header","import * as types from './actionTypes'\n\n/* \n    Get todo action creators\n*/\nexport const getTodos = () => ({\n    type: types.GET_TODOS,\n})\nexport const getTodosSucceeded = todos => ({\n    type: types.GET_TODOS_SUCCEEDED,\n    payload: { todos }\n})\nexport const getTodosFailed = error => ({\n    type: types.GET_TODOS_FAILED,\n    payload: { error }\n})\n\n/*  \n    Delete todo action creators\n*/\nexport const deleteTodo = id => ({\n    type: types.DELETE_TODO,\n    payload: { id }\n})\nexport const deleteSucceeded = id => ({\n    type: types.DELETE_SUCCEEDED,\n    payload: { id }\n})\nexport const deleteFailed = error => ({\n    type: types.DELETE_FAILED,\n    payload: { error }\n})\n\n/*  \n    Toggle todo action creators\n*/\nexport const toggleTodo = id => ({\n    type: types.TOGGLE_TODO,\n    payload: { id }\n})\nexport const toggleSucceeded = todo => ({\n    type: types.TOGGLE_SUCCEEDED,\n    payload: { todo }\n})\nexport const toggleFailed = error => ({\n    type: types.TOGGLE_FAILED,\n    payload: { error }\n})\n\n/*\n    Add todo action creators\n*/\nexport const addTodo = todo => ({\n    type: types.ADD_TODO,\n    payload: { todo }\n})\nexport const addTodoSucceeded = todo => ({\n    type: types.ADD_TODO_SUCCEEDED,\n    payload: { todo }\n})\nexport const addTodoFailed = error => ({\n    type: types.ADD_TODO_FAILED,\n    payload: { error }\n})","// Action types\nexport const GET_TODOS = 'GET_TODOS'\nexport const GET_TODOS_SUCCEEDED = 'GET_TODOS_SUCCEEDED'\nexport const GET_TODOS_FAILED = 'GET_TODOS_FAILED'\n\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const DELETE_SUCCEEDED = 'DELETE_SUCCEEDED'\nexport const DELETE_FAILED = 'DELETE_FAILED'\n\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const TOGGLE_SUCCEEDED = 'TOGGLE_SUCCEEDED'\nexport const TOGGLE_FAILED = 'TOGGLE_FAILED'\n\nexport const ADD_TODO = 'ADD_TODO'\nexport const ADD_TODO_SUCCEEDED = 'ADD_TODO_SUCCEEDED'\nexport const ADD_TODO_FAILED = 'ADD_TODO_FAILED'","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\n\nimport './TodoItem.scss'\n\nconst TodoItem = ({ todo, handleDelete, handleToggle }) => {\n    // Fade animation on mounting\n    const fade = useSpring({\n        opacity: 1,\n        from: { opacity: 0 },\n        config: { duration: 400 }\n    })\n\n    // Event handlers\n    const handleChange = () => { handleToggle(todo.id) }\n    const handleClick = () => { handleDelete(todo.id) }\n\n    return (\n        <animated.div\n            className={`todo-item ${todo.completed ? 'checked' : ''}`}\n            style={fade}\n            aria-label={`Todo ${todo.id}`}\n        >\n            <div className='checkbox-container'>\n                <input id={todo.id} type='checkbox' onChange={handleChange} checked={todo.completed} />\n                <label htmlFor={todo.id}>{todo.title}</label>\n            </div>\n            <button onClick={handleClick} aria-label='Delete todo'>\n                <span className='cross-container'>\n                    <span className='cross'></span>\n                </span>\n            </button>\n        </animated.div>\n    )\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handleToggle: PropTypes.func.isRequired,\n}\n\nexport default React.memo(TodoItem)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './SectionHeader.scss'\n\nconst SectionHeader = ({ title, children }) => (\n    <h3 className='section-header'>\n        {title}\n        {children}\n    </h3>\n)\n\nSectionHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n}\n\nexport default React.memo(SectionHeader)","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport SectionHeader from '../../SectionHeader/SectionHeader'\nimport './TodoForm.scss'\n\nconst TodoForm = ({ handleAdd }) => {\n    const [title, setTitle] = useState('')\n\n    // Event handlers\n    const handleChange = event => { setTitle(event.target.value) }\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (title) {\n            handleAdd(title)\n            setTitle('') // Reset input value when form is submitted\n        }\n    }\n\n    return (\n        <section className='form-container'>\n            <SectionHeader title='Ny Todo' />\n            <form className='todo-form' onSubmit={handleSubmit}>\n                <input\n                    className='todo-text'\n                    type='text'\n                    name='Todo text'\n                    value={title}\n                    onChange={handleChange}\n                    placeholder='Legg til en ny todo'\n                    aria-label='Ny todo tekst' />\n                <button type='submit'>Legg til</button>\n            </form>\n        </section>\n    )\n}\n\nTodoForm.propTypes = {\n    handleAdd: PropTypes.func.isRequired,\n}\n\nexport default React.memo(TodoForm)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './TodoList.scss'\n\nconst TodoList = ({ children }) => (\n    <section className='list-container'>\n        {children}\n    </section>\n)\n\nTodoList.propTypes = {\n    children: PropTypes.node,\n}\n\nexport default TodoList","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport * as actions from '../../../actions/todoActions'\nimport TodoItem from '../TodoItem/TodoItem'\nimport TodoForm from '../TodoForm/TodoForm'\nimport TodoList from '../TodoList/TodoList'\nimport SectionHeader from '../../SectionHeader/SectionHeader'\n\nconst TodoContainer = () => {\n    const list = useSelector(state => state.todo)\n    const dispatch = useDispatch()\n\n    // Get todos after component mounts\n    useEffect(() => { dispatch(actions.getTodos()) }, [])\n\n    // Event handlers\n    const handleAdd = title => { dispatch(actions.addTodo({ title, completed: false, })) }\n    const handleDelete = id => { dispatch(actions.deleteTodo(id)) }\n    const handleToggle = id => { dispatch(actions.toggleTodo(id)) }\n\n    const noTodos = list.todos.length > 0 ? false : true\n\n    // Content of the page before todos are fetched\n    let componentContent = <p className='loading-text'>Ingen todos :) Lag din første!</p>\n\n    if (list.isLoading && noTodos) {\n        componentContent = <p className='loading-text'>Loading...</p>\n    } else if (!noTodos) {\n        componentContent = (\n            <TodoList>\n                <SectionHeader title='Dine todos'>\n                    <div style={{ opacity: (list.isLoading ? '1' : '0') }} className='spinner'></div>\n                </SectionHeader>\n                {list.error &&\n                    <p className='error-text'>Hmm... Det skjedde dessverre en feil.</p>\n                }\n\n                {list.todos.map(item => (\n                    <TodoItem\n                        todo={item}\n                        key={item.id}\n                        handleDelete={handleDelete}\n                        handleToggle={handleToggle}\n                    />\n                ))}\n            </TodoList>\n        )\n    }\n\n    return (\n        <main>\n            <TodoForm handleAdd={handleAdd} />\n            {componentContent}\n        </main>\n    )\n}\n\nexport default TodoContainer","import React from 'react'\n\nimport Header from '../Header/Header'\nimport TodoContainer from '../Todo/TodoContainer/TodoContainer'\n\nconst App = () => {\n    return (\n        <div className='page-container'>\n            <Header />\n            <TodoContainer />\n        </div>\n    )\n}\n\nexport default App","import * as types from '../actions/actionTypes'\n\nexport const initialState = {\n    isLoading: false,\n    todos: [],\n    error: null,\n}\n\nconst todoReducer = (state = initialState, action) => {\n    let newState = { ...state }\n    let { type, payload } = action\n\n    switch (type) {\n        // ---- When initial request action is triggered \n        case types.GET_TODOS:\n            newState.isLoading = true\n            return newState\n        case types.DELETE_TODO:\n        case types.TOGGLE_TODO:\n        case types.ADD_TODO:\n            newState.isLoading = true\n            return newState\n\n        // ---- When SUCCESS actions are triggered \n        case types.GET_TODOS_SUCCEEDED:\n            newState.todos = payload.todos\n            newState.isLoading = false\n            return newState\n        case types.DELETE_SUCCEEDED:\n            const todoIndex1 = newState.todos.findIndex(t => t.id === payload.id)\n            newState.todos.splice(todoIndex1, 1)\n            newState.isLoading = false\n            return newState\n        case types.TOGGLE_SUCCEEDED:\n            const todoIndex2 = newState.todos.findIndex(t => t.id === payload.todo.id)\n            newState.todos.splice(todoIndex2, 1, payload.todo)\n            newState.isLoading = false\n            return newState\n        case types.ADD_TODO_SUCCEEDED:\n            newState.todos.push(payload.todo)\n            newState.isLoading = false\n            return newState\n\n        // ---- When FAIL actions are triggered    \n        case types.GET_TODOS_FAILED:\n            newState.error = payload.error\n            newState.isLoading = false\n            return newState\n        case types.DELETE_FAILED:\n        case types.TOGGLE_FAILED:\n        case types.ADD_TODO_FAILED:\n            console.error(`Server error: ${payload.error}`)\n            newState.error = payload.error\n            newState.isloading = false\n            return newState\n\n        default:\n            return state\n    }\n}\n\nexport default todoReducer","import { combineReducers } from 'redux'\n\nimport todoReducer from './todoReducer'\n\nconst rootReducer = combineReducers({\n    todo: todoReducer,\n})\n\nexport default rootReducer","const ERROR_NOT_FOUND = 'Rejected: The todo could not be found'\nconst ERROR_NOT_VALID = 'Rejected: The todo is not valid'\n\nconst validateTodo = (todo) => {\n    var keys = ['title', 'completed']\n    return keys.map(key => key in todo).reduce((a, b) => a && b)\n}\n\nconst sleep = () => {\n    const maxSleepMs = 500\n    return new Promise((resolve) => setTimeout(resolve, Math.random() * maxSleepMs))\n}\n\nlet mockedTodos = [\n    { 'id': 0, title: 'Buy ice cream', completed: false },\n    { 'id': 1, title: 'Buy rain coat', completed: false },\n    { 'id': 2, title: 'Eat ice cream in rain', completed: false },\n]\n\nclass TodoService {\n\n    getTodoById(id) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(todo => todo.id === id)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            const todo = mockedTodos.find(todo => todo.id === id)\n            return Promise.resolve(todo)\n        })\n    }\n\n    getTodos() {\n        return sleep().then(() => {\n            return Promise.resolve(mockedTodos)\n        })\n    }\n\n    toggleTodo(todoId) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(t => t.id === todoId)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            const updatedTodo = { ...mockedTodos[todoIndex], completed: !mockedTodos[todoIndex].completed }\n            mockedTodos[todoIndex] = updatedTodo\n            return Promise.resolve(updatedTodo)\n        })\n    }\n\n    addTodo(todo) {\n        return sleep().then(() => {\n            const valid = validateTodo(todo)\n            if (!valid) {\n                return Promise.reject(ERROR_NOT_VALID)\n            }\n            let id = 0\n            if (mockedTodos.length > 0) {\n                id = Math.max(...mockedTodos.map(t => t.id)) + 1\n            }\n\n            const createdTodo = { ...todo, id }\n\n            mockedTodos = [...mockedTodos, createdTodo]\n            return Promise.resolve(createdTodo)\n        })\n    }\n\n    deleteTodo(id) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(todo => todo.id === id)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            mockedTodos = mockedTodos.filter(todo => todo.id !== id)\n            return Promise.resolve()\n        })\n    }\n}\n\nexport default new TodoService()\n\n","import { all, call, put, take, takeLatest, takeEvery } from 'redux-saga/effects'\n\nimport todoService from '../todoService'\nimport * as types from '../actions/actionTypes'\nimport * as actions from '../actions/todoActions'\n\nfunction* getTodos(action) {\n    try {\n        const todos = yield call(todoService.getTodos)\n        yield put(actions.getTodosSucceeded(todos))\n    } catch (error) {\n        yield put(actions.getTodosFailed(error))\n    }\n}\n\nfunction* deleteTodo(action) {\n    try {\n        yield call(todoService.deleteTodo, action.payload.id)\n        yield put(actions.deleteSucceeded(action.payload.id))\n    } catch (error) {\n        yield put(actions.deleteFailed(error))\n    }\n}\n\nfunction* toggleTodo(action) {\n    try {\n        const todo = yield call(todoService.toggleTodo, action.payload.id)\n        yield put(actions.toggleSucceeded(todo))\n    } catch (error) {\n        yield put(actions.toggleFailed(error))\n    }\n}\n\nfunction* addTodo(action) {\n    try {\n        const todo = yield call(todoService.addTodo, action.payload.todo)\n        yield put(actions.addTodoSucceeded(todo))\n    } catch (error) {\n        yield put(actions.addTodoFailed(error))\n    }\n}\n\n// watchDeleteTodo uses the call effect that blocks multiple delete requests to the server\nfunction* watchDeleteTodo() {\n    while (true) {\n        const action = yield take(types.DELETE_TODO)\n        yield call(deleteTodo, action)\n    }\n}\n\nfunction* watchGetTodos() { yield takeLatest(types.GET_TODOS, getTodos) }\nfunction* watchToggleTodo() { yield takeEvery(types.TOGGLE_TODO, toggleTodo) }\nfunction* watchAddTodo() { yield takeEvery(types.ADD_TODO, addTodo) }\n\n// rootSaga runs the watchers in parallel\nexport default function* rootSaga() {\n    yield all([\n        watchGetTodos(),\n        watchDeleteTodo(),\n        watchToggleTodo(),\n        watchAddTodo(),\n    ])\n}","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from '../reducers/rootReducer'\nimport rootSaga from '../sagas/todoSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(sagaMiddleware)\n    )\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App/App'\nimport store from './store/store'\nimport './styles/index.scss'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}