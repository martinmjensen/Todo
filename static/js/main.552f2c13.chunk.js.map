{"version":3,"sources":["components/Header/Header.js","actions/todoActions.js","actions/actionTypes.js","components/Todo/TodoItem/TodoItem.js","components/SectionHeader/SectionHeader.js","components/Todo/TodoForm/TodoForm.js","components/Todo/TodoList/TodoList.js","components/Todo/TodoContainer/TodoContainer.js","components/App/App.js","reducers/todoReducer.js","reducers/rootReducer.js","todoService/index.js","sagas/todoSaga.js","store/store.js","index.js"],"names":["Header","className","getTodosSucceeded","todos","type","payload","toggleSucceeded","todo","addTodoSucceeded","React","memo","handleDelete","handleToggle","fade","useSpring","opacity","from","config","duration","div","completed","style","aria-label","id","onChange","checked","htmlFor","title","onClick","children","TodoForm","handleAdd","useState","setTitle","onSubmit","event","preventDefault","name","value","target","placeholder","TodoList","TodoContainer","list","useSelector","state","dispatch","useDispatch","useEffect","actions","componentContent","isLoading","isWorking","error","map","item","key","App","initialState","todoReducer","action","newState","todoId","findIndex","splice","todoIndex","push","console","isloading","rootReducer","combineReducers","ERROR_NOT_FOUND","sleep","Promise","resolve","setTimeout","Math","random","mockedTodos","then","reject","find","t","updatedTodo","reduce","a","b","validateTodo","length","max","createdTodo","filter","getTodos","deleteTodo","toggleTodo","addTodo","watchDeleteTodo","watchGetTodos","watchToggleTodo","watchAddTodo","rootSaga","call","todoService","put","take","takeLatest","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"4SAWeA,G,MAPA,kBACX,gCACI,wBAAIC,UAAU,SAAd,SACA,wBAAIA,UAAU,aAAd,+CCCKC,EAAoB,SAAAC,GAAK,MAAK,CACvCC,KCR+B,sBDS/BC,QAAS,CAAEF,WA8BFG,EAAkB,SAAAC,GAAI,MAAK,CACpCH,KChC4B,mBDiC5BC,QAAS,CAAEE,UAcFC,EAAmB,SAAAD,GAAI,MAAK,CACrCH,KC5C8B,qBD6C9BC,QAAS,CAAEE,U,QEvBAE,G,MAAAA,IAAMC,MA9BJ,SAAC,GAA0C,IAAxCH,EAAuC,EAAvCA,KAAMI,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC9BC,EAAOC,YAAU,CACnBC,QAAS,EACTC,KAAM,CAAED,QAAS,GACjBE,OAAQ,CAAEC,SAAU,OAOxB,OACI,kBAAC,IAASC,IAAV,CACIlB,UAAS,oBAAeM,EAAKa,UAAY,UAAY,IACrDC,MAAOR,EACPS,aAAA,eAAoBf,EAAKgB,KAEzB,yBAAKtB,UAAU,sBACX,2BAAOsB,GAAIhB,EAAKgB,GAAInB,KAAK,WAAWoB,SAX3B,WACjBZ,EAAaL,EAAKgB,KAUkDE,QAASlB,EAAKa,YAC1E,2BAAOM,QAASnB,EAAKgB,IAAKhB,EAAKoB,QAEnC,4BAAQC,QAAS,kBAAMjB,EAAaJ,EAAKgB,KAAKD,aAAW,eACrD,0BAAMrB,UAAU,mBACZ,0BAAMA,UAAU,iB,QCjBrBQ,G,MAAAA,IAAMC,MAPC,SAAC,GAAD,IAAGiB,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,OAClB,wBAAI5B,UAAU,kBACT0B,EACAE,OC4BMC,G,MA9BE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACNC,mBAAS,IADH,mBACzBL,EADyB,KAClBM,EADkB,KAYhC,OACI,6BAAShC,UAAU,kBACf,kBAAC,EAAD,CAAe0B,MAAM,YACrB,0BAAM1B,UAAU,YAAYiC,SAXf,SAAAC,GACjBA,EAAMC,iBACFT,IACAI,EAAUJ,GACVM,EAAS,OAQL,2BACIhC,UAAU,YACVG,KAAK,OACLiC,KAAK,YACLC,MAAOX,EACPH,SAlBK,SAAAW,GAAWF,EAASE,EAAMI,OAAOD,QAmBtCE,YAAY,sBACZlB,aAAW,kBACf,4BAAQlB,KAAK,UAAb,gBCrBDqC,EANE,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAH,OACb,6BAAS5B,UAAU,kBACd4B,IC4CMa,EAvCO,WAClB,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMtC,QAClCuC,EAAWC,cAEjBC,qBAAU,WAAQF,ENRS,CAC3B1C,KCNqB,gBKa6B,IAElD,IACMO,EAAe,SAAAY,GAAQuB,ENIP,SAAAvB,GAAE,MAAK,CAC7BnB,KCjBuB,cDkBvBC,QAAS,CAAEkB,OMN2B0B,CAAmB1B,KACnDX,EAAe,SAAAW,GAAQuB,ENmBP,SAAAvB,GAAE,MAAK,CAC7BnB,KC7BuB,cD8BvBC,QAAS,CAAEkB,OMrB2B0B,CAAmB1B,KAErD2B,EAAmB,uBAAGjD,UAAU,gBAAb,oBAqBvB,OAnBK0C,EAAKQ,YACND,EACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAevB,MAAM,cACjB,yBAAKN,MAAO,CAAEN,QAAU4B,EAAKS,UAAY,IAAM,KAAQnD,UAAU,aAEpE0C,EAAKU,OAAS,uBAAGpD,UAAU,cAAb,4BACd0C,EAAKxC,MAAMmD,KAAI,SAAAC,GAAI,OAChB,kBAAC,EAAD,CACIhD,KAAMgD,EACNC,IAAKD,EAAKhC,GACVZ,aAAcA,EACdC,aAAcA,SAQ9B,8BACI,kBAAC,EAAD,CAAUmB,UA3BA,SAAAJ,GAAWmB,ENqCD,CAC5B1C,KCzCoB,WD0CpBC,QAAS,CAAEE,KMvC2C,CAAEoB,QAAOP,WAAW,SA4BjE8B,IC7BEO,EATH,WACR,OACI,yBAAKxD,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,+BCPNyD,EAAe,CACjBP,WAAW,EACXhD,MAAO,GACPkD,MAAO,KACPD,WAAW,GA0DAO,EAvDK,WAAmC,IAAlCd,EAAiC,uDAAzBa,EAAcE,EAAW,uCAC9CC,EAAQ,eAAQhB,GAEpB,OAAQe,EAAOxD,MACX,IPbiB,YOeb,OADAyD,EAASV,WAAY,EACdU,EAEX,IPbmB,cOcnB,IPVmB,cOWnB,IPPgB,WOSZ,OADAA,EAAST,WAAY,EACdS,EAEX,IPtB2B,sBOyBvB,OAFAA,EAAS1D,MAAQyD,EAAOvD,QAAQF,MAChC0D,EAASV,WAAY,EACdU,EAEX,IPvBwB,mBOwBpB,IAAMC,EAASD,EAAS1D,MAAM4D,WAAU,SAAAxD,GAAI,OAAIA,EAAKgB,KAAOqC,EAAOvD,QAAQkB,MAG3E,OAFAsC,EAAS1D,MAAM6D,OAAOF,EAAQ,GAC9BD,EAAST,WAAY,EACdS,EAEX,IPzBwB,mBO0BpB,IAAMI,EAAYJ,EAAS1D,MAAM4D,WAAU,SAAAxD,GAAI,OAAIA,EAAKgB,KAAOqC,EAAOvD,QAAQE,KAAKgB,MAGnF,OAFAsC,EAAS1D,MAAM6D,OAAOC,EAAW,EAAGL,EAAOvD,QAAQE,MACnDsD,EAAST,WAAY,EACdS,EAEX,IP3B0B,qBO8BtB,OAFAA,EAAST,WAAY,EACrBS,EAAS1D,MAAM+D,KAAKN,EAAOvD,QAAQE,MAC5BsD,EAEX,IP3CwB,mBO8CpB,OAFAA,EAASR,MAAQO,EAAOvD,QAAQgD,MAChCQ,EAASV,WAAY,EACdU,EAEX,IP5CqB,gBO6CrB,IPzCqB,gBO0CrB,IPtCuB,kBO2CnB,OAJAM,QAAQd,MAAR,wBAA+BO,EAAOvD,QAAQgD,QAC9CQ,EAASR,MAAQO,EAAOvD,QAAQgD,MAChCQ,EAAST,WAAY,EACrBS,EAASO,WAAY,EACdP,EAEX,QACI,OAAOhB,ICpDJwB,EAJKC,0BAAgB,CAChC/D,KAAMoD,I,8CCLJY,EAAkB,wCAQlBC,EAAQ,WAEV,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EADxB,IACiCE,KAAKC,cAGzDC,EAAc,CACd,CAAE,GAAM,EAAGnD,MAAO,gBAAiBP,WAAW,GAC9C,CAAE,GAAM,EAAGO,MAAO,gBAAiBP,WAAW,GAC9C,CAAE,GAAM,EAAGO,MAAO,wBAAyBP,WAAW,IAgE3C,M,oGA3DCG,GACR,OAAOiD,IAAQO,MAAK,WAEhB,GADkBD,EAAYf,WAAU,SAAAxD,GAAI,OAAIA,EAAKgB,KAAOA,KAC5C,EACZ,OAAOkD,QAAQO,OAAOT,GAE1B,IAAMhE,EAAOuE,EAAYG,MAAK,SAAA1E,GAAI,OAAIA,EAAKgB,KAAOA,KAClD,OAAOkD,QAAQC,QAAQnE,Q,iCAK3B,OAAOiE,IAAQO,MAAK,WAChB,OAAON,QAAQC,QAAQI,Q,iCAIpBhB,GACP,OAAOU,IAAQO,MAAK,WAChB,IAAMd,EAAYa,EAAYf,WAAU,SAAAmB,GAAC,OAAIA,EAAE3D,KAAOuC,KACtD,GAAIG,EAAY,EACZ,OAAOQ,QAAQO,OAAOT,GAE1B,IAAMY,EAAW,eAAQL,EAAYb,GAApB,CAAgC7C,WAAY0D,EAAYb,GAAW7C,YAEpF,OADA0D,EAAYb,GAAakB,EAClBV,QAAQC,QAAQS,Q,8BAIvB5E,GACJ,OAAOiE,IAAQO,MAAK,WAEhB,IAlDS,SAACxE,GAElB,MADW,CAAC,QAAS,aACT+C,KAAI,SAAAE,GAAG,OAAIA,KAAOjD,KAAM6E,QAAO,SAACC,EAAGC,GAAJ,OAAUD,GAAKC,KA+CpCC,CAAahF,GAEvB,OAAOkE,QAAQO,OArDP,mCAuDZ,IAAIzD,EAAK,EACLuD,EAAYU,OAAS,IACrBjE,EAAKqD,KAAKa,IAAL,MAAAb,KAAI,YAAQE,EAAYxB,KAAI,SAAA4B,GAAC,OAAIA,EAAE3D,QAAO,GAGnD,IAAMmE,EAAW,eAAQnF,EAAR,CAAcgB,OAG/B,OADAuD,EAAW,sBAAOA,GAAP,CAAoBY,IACxBjB,QAAQC,QAAQgB,Q,iCAIpBnE,GACP,OAAOiD,IAAQO,MAAK,WAEhB,OADkBD,EAAYf,WAAU,SAAAxD,GAAI,OAAIA,EAAKgB,KAAOA,KAC5C,EACLkD,QAAQO,OAAOT,IAE1BO,EAAcA,EAAYa,QAAO,SAAApF,GAAI,OAAIA,EAAKgB,KAAOA,KAC9CkD,QAAQC,kB,iBCrEjBkB,G,WASAC,G,WASAC,G,WASAC,G,WASAC,G,WAOAC,G,WACAC,G,WACAC,G,WAEeC,IA/CzB,SAAUR,EAAShC,GAAnB,uEAEsB,OAFtB,kBAE4ByC,YAAKC,EAAYV,UAF7C,OAGQ,OADMzF,EAFd,gBAGcoG,YAAItD,EAA0B9C,IAH5C,8BAKQ,OALR,mCAKcoG,YXC0B,CACpCnG,KCX4B,mBDY5BC,QAAS,CAAEgD,MWHG,QALlB,qDASA,SAAUwC,EAAWjC,GAArB,iEAEQ,OAFR,kBAEcyC,YAAKC,EAAYT,WAAYjC,EAAOvD,QAAQkB,IAF1D,OAGQ,OAHR,SAGcgF,YXMwB,CAClCnG,KCpB4B,mBDqB5BC,QAAS,CAAEkB,GWR2BqC,EAAOvD,QAAQkB,MAHzD,8BAKQ,OALR,mCAKcgF,YXQwB,CAClCnG,KCvByB,gBDwBzBC,QAAS,CAAEgD,MWVG,QALlB,qDASA,SAAUyC,EAAWlC,GAArB,uEAEqB,OAFrB,kBAE2ByC,YAAKC,EAAYR,WAAYlC,EAAOvD,QAAQkB,IAFvE,OAGQ,OADMhB,EAFd,gBAGcgG,YAAItD,EAAwB1C,IAH1C,8BAKQ,OALR,mCAKcgG,YXewB,CAClCnG,KCnCyB,gBDoCzBC,QAAS,CAAEgD,MWjBG,QALlB,qDASA,SAAU0C,EAAQnC,GAAlB,uEAEqB,OAFrB,kBAE2ByC,YAAKC,EAAYP,QAASnC,EAAOvD,QAAQE,MAFpE,OAGQ,OADMA,EAFd,gBAGcgG,YAAItD,EAAyB1C,IAH3C,8BAKQ,OALR,mCAKcgG,YXsByB,CACnCnG,KC/C2B,kBDgD3BC,QAAS,CAAEgD,MWxBG,QALlB,qDASA,SAAU2C,IAAV,uEAEuB,OAFvB,SAE6BQ,YVxCF,eUsC3B,OAGQ,OADM5C,EAFd,gBAGcyC,YAAKR,EAAYjC,GAH/B,6DAOA,SAAUqC,IAAV,iEAA4B,OAA5B,SAAkCQ,YVjDT,YUiDqCb,GAA9D,uCACA,SAAUM,IAAV,iEAA8B,OAA9B,SAAoCQ,YV1CT,cU0CsCZ,GAAjE,uCACA,SAAUK,IAAV,iEAA2B,OAA3B,SAAiCO,YVvCT,WUuCmCX,GAA3D,uCAEe,SAAUK,KAAV,iEACX,OADW,SACLO,YAAI,CACNV,IACAD,IACAE,IACAC,MALO,uCC9Cf,IAAMS,GAAiBC,cAEjBC,GAAQC,sBACV1C,EACA2C,8BACIC,0BAAgBL,MAIxBA,GAAeM,IAAId,IAEJU,U,MCVfK,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.552f2c13.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Header.scss'\n\nconst Header = () => (\n    <header>\n        <h1 className='title'>Todo.</h1>\n        <h2 className='sub-title'>Todo, or not todo, that is the question.</h2>\n    </header>\n)\n\nexport default Header","import * as types from './actionTypes'\n\n/* \n    Get todos\n*/\nexport const getTodos = () => ({\n    type: types.GET_TODOS,\n})\nexport const getTodosSucceeded = todos => ({\n    type: types.GET_TODOS_SUCCEEDED,\n    payload: { todos }\n})\nexport const getTodosFailed = error => ({\n    type: types.GET_TODOS_FAILED,\n    payload: { error }\n})\n\n/*  \n    Delete todo\n*/\nexport const deleteTodo = id => ({\n    type: types.DELETE_TODO,\n    payload: { id }\n})\nexport const deleteSucceeded = id => ({\n    type: types.DELETE_SUCCEEDED,\n    payload: { id }\n})\nexport const deleteFailed = error => ({\n    type: types.DELETE_FAILED,\n    payload: { error }\n})\n\n/*  \n    Toggle todo\n*/\nexport const toggleTodo = id => ({\n    type: types.TOGGLE_TODO,\n    payload: { id }\n})\nexport const toggleSucceeded = todo => ({\n    type: types.TOGGLE_SUCCEEDED,\n    payload: { todo }\n})\nexport const toggleFailed = error => ({\n    type: types.TOGGLE_FAILED,\n    payload: { error }\n})\n\n/*  \n    Add todo\n*/\nexport const addTodo = todo => ({\n    type: types.ADD_TODO,\n    payload: { todo }\n})\nexport const addTodoSucceeded = todo => ({\n    type: types.ADD_TODO_SUCCEEDED,\n    payload: { todo }\n})\nexport const addTodoFailed = error => ({\n    type: types.ADD_TODO_FAILED,\n    payload: { error }\n})","export const GET_TODOS = 'GET_TODOS'\nexport const GET_TODOS_SUCCEEDED = 'GET_TODOS_SUCCEEDED'\nexport const GET_TODOS_FAILED = 'GET_TODOS_FAILED'\n\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const DELETE_SUCCEEDED = 'DELETE_SUCCEEDED'\nexport const DELETE_FAILED = 'DELETE_FAILED'\n\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\nexport const TOGGLE_SUCCEEDED = 'TOGGLE_SUCCEEDED'\nexport const TOGGLE_FAILED = 'TOGGLE_FAILED'\n\nexport const ADD_TODO = 'ADD_TODO'\nexport const ADD_TODO_SUCCEEDED = 'ADD_TODO_SUCCEEDED'\nexport const ADD_TODO_FAILED = 'ADD_TODO_FAILED'","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nimport './TodoItem.scss'\n\nconst TodoItem = ({ todo, handleDelete, handleToggle }) => {\n    const fade = useSpring({\n        opacity: 1,\n        from: { opacity: 0 },\n        config: { duration: 400 }\n    })\n\n    const handleChange = () => {\n        handleToggle(todo.id)\n    }\n\n    return (\n        <animated.div\n            className={`todo-item ${todo.completed ? 'checked' : ''}`}\n            style={fade}\n            aria-label={`Todo ${todo.id}`}\n        >\n            <div className='checkbox-container'>\n                <input id={todo.id} type='checkbox' onChange={handleChange} checked={todo.completed} />\n                <label htmlFor={todo.id}>{todo.title}</label>\n            </div>\n            <button onClick={() => handleDelete(todo.id)} aria-label='Delete todo'>\n                <span className='cross-container'>\n                    <span className='cross'></span>\n                </span>\n            </button>\n        </animated.div>\n    )\n}\n\nexport default React.memo(TodoItem)","import React from 'react'\n\nimport './SectionHeader.scss'\n\nconst SectionHeader = ({ title, children }) => (\n    <h3 className='section-header'>\n        {title}\n        {children}\n    </h3>\n)\n\nexport default React.memo(SectionHeader)","import React, { useState } from 'react'\n\nimport SectionHeader from '../../SectionHeader/SectionHeader'\nimport './TodoForm.scss'\n\nconst TodoForm = ({ handleAdd }) => {\n    const [title, setTitle] = useState('')\n\n    const handleChange = event => { setTitle(event.target.value) }\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (title) {\n            handleAdd(title)\n            setTitle('')\n        }\n    }\n\n    return (\n        <section className='form-container'>\n            <SectionHeader title='Ny Todo' />\n            <form className='todo-form' onSubmit={handleSubmit}>\n                <input\n                    className='todo-text'\n                    type='text'\n                    name='Todo text'\n                    value={title}\n                    onChange={handleChange}\n                    placeholder='Legg til en ny todo'\n                    aria-label='Ny todo tekst' />\n                <button type='submit'>Legg til</button>\n            </form>\n        </section>\n    )\n}\n\nexport default TodoForm","import React from 'react'\n\nconst TodoList = ({ children }) => (\n    <section className='list-container'>\n        {children}\n    </section>\n)\n\nexport default TodoList","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport * as actions from '../../../actions/todoActions'\nimport TodoItem from '../TodoItem/TodoItem'\nimport TodoForm from '../TodoForm/TodoForm'\nimport TodoList from '../TodoList/TodoList'\nimport SectionHeader from '../../SectionHeader/SectionHeader'\n\nconst TodoContainer = () => {\n    const list = useSelector(state => state.todo)\n    const dispatch = useDispatch()\n\n    useEffect(() => { dispatch(actions.getTodos()) }, [])\n\n    const handleAdd = title => { dispatch(actions.addTodo({ title, completed: false, })) }\n    const handleDelete = id => { dispatch(actions.deleteTodo(id)) }\n    const handleToggle = id => { dispatch(actions.toggleTodo(id)) }\n\n    let componentContent = <p className='loading-text'>Loading todos...</p>\n\n    if (!list.isLoading) {\n        componentContent = (\n            <TodoList>\n                <SectionHeader title='Dine todos'>\n                    <div style={{ opacity: (list.isWorking ? '1' : '0') }} className='spinner'></div>\n                </SectionHeader>\n                {list.error && <p className='error-text'>Hmm... noe gikk galt her</p>}\n                {list.todos.map(item => (\n                    <TodoItem\n                        todo={item}\n                        key={item.id}\n                        handleDelete={handleDelete}\n                        handleToggle={handleToggle}\n                    />\n                ))}\n            </TodoList>\n        )\n    }\n\n    return (\n        <main>\n            <TodoForm handleAdd={handleAdd} />\n            {componentContent}\n        </main>\n    )\n}\n\nexport default TodoContainer","import React from 'react'\n\nimport Header from '../Header/Header'\nimport TodoContainer from '../Todo/TodoContainer/TodoContainer'\n\nconst App = () => {\n    return (\n        <div className='page-container'>\n            <Header />\n            <TodoContainer />\n        </div>\n    )\n}\n\nexport default App","import * as types from '../actions/actionTypes'\n\nconst initialState = {\n    isLoading: false,\n    todos: [],\n    error: null,\n    isWorking: false,\n}\n\nconst todoReducer = (state = initialState, action) => {\n    let newState = { ...state }\n\n    switch (action.type) {\n        case types.GET_TODOS:\n            newState.isLoading = true\n            return newState\n\n        case types.DELETE_TODO:\n        case types.TOGGLE_TODO:\n        case types.ADD_TODO:\n            newState.isWorking = true\n            return newState\n\n        case types.GET_TODOS_SUCCEEDED:\n            newState.todos = action.payload.todos\n            newState.isLoading = false\n            return newState\n\n        case types.DELETE_SUCCEEDED:\n            const todoId = newState.todos.findIndex(todo => todo.id === action.payload.id)\n            newState.todos.splice(todoId, 1)\n            newState.isWorking = false\n            return newState\n\n        case types.TOGGLE_SUCCEEDED:\n            const todoIndex = newState.todos.findIndex(todo => todo.id === action.payload.todo.id)\n            newState.todos.splice(todoIndex, 1, action.payload.todo)\n            newState.isWorking = false\n            return newState\n\n        case types.ADD_TODO_SUCCEEDED:\n            newState.isWorking = false\n            newState.todos.push(action.payload.todo)\n            return newState\n\n        case types.GET_TODOS_FAILED:\n            newState.error = action.payload.error\n            newState.isLoading = false\n            return newState\n\n        case types.DELETE_FAILED:\n        case types.TOGGLE_FAILED:\n        case types.ADD_TODO_FAILED:\n            console.error(`Server error: ${action.payload.error}`)\n            newState.error = action.payload.error\n            newState.isWorking = false\n            newState.isloading = false\n            return newState\n\n        default:\n            return state\n    }\n}\n\nexport default todoReducer","import { combineReducers } from 'redux'\n\nimport todoReducer from './todoReducer'\n\nconst rootReducer = combineReducers({\n    todo: todoReducer,\n})\n\nexport default rootReducer","const ERROR_NOT_FOUND = 'Rejected: The todo could not be found'\nconst ERROR_NOT_VALID = 'Rejected: The todo is not valid'\n\nconst validateTodo = (todo) => {\n    var keys = ['title', 'completed']\n    return keys.map(key => key in todo).reduce((a, b) => a && b)\n}\n\nconst sleep = () => {\n    const maxSleepMs = 500\n    return new Promise((resolve) => setTimeout(resolve, Math.random() * maxSleepMs))\n}\n\nlet mockedTodos = [\n    { 'id': 0, title: 'Buy ice cream', completed: false },\n    { 'id': 1, title: 'Buy rain coat', completed: false },\n    { 'id': 2, title: 'Eat ice cream in rain', completed: false },\n]\n\nclass TodoService {\n\n    getTodoById(id) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(todo => todo.id === id)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            const todo = mockedTodos.find(todo => todo.id === id)\n            return Promise.resolve(todo)\n        })\n    }\n\n    getTodos() {\n        return sleep().then(() => {\n            return Promise.resolve(mockedTodos)\n        })\n    }\n\n    toggleTodo(todoId) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(t => t.id === todoId)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            const updatedTodo = { ...mockedTodos[todoIndex], completed: !mockedTodos[todoIndex].completed }\n            mockedTodos[todoIndex] = updatedTodo\n            return Promise.resolve(updatedTodo)\n        })\n    }\n\n    addTodo(todo) {\n        return sleep().then(() => {\n            const valid = validateTodo(todo)\n            if (!valid) {\n                return Promise.reject(ERROR_NOT_VALID)\n            }\n            let id = 0\n            if (mockedTodos.length > 0) {\n                id = Math.max(...mockedTodos.map(t => t.id)) + 1\n            }\n\n            const createdTodo = { ...todo, id }\n\n            mockedTodos = [...mockedTodos, createdTodo]\n            return Promise.resolve(createdTodo)\n        })\n    }\n\n    deleteTodo(id) {\n        return sleep().then(() => {\n            const todoIndex = mockedTodos.findIndex(todo => todo.id === id)\n            if (todoIndex < 0) {\n                return Promise.reject(ERROR_NOT_FOUND)\n            }\n            mockedTodos = mockedTodos.filter(todo => todo.id !== id)\n            return Promise.resolve()\n        })\n    }\n}\n\nexport default new TodoService()\n\n","import { all, call, cancel, fork, put, take, takeLatest, takeEvery } from 'redux-saga/effects'\n\nimport todoService from '../todoService'\nimport * as types from '../actions/actionTypes'\nimport * as actions from '../actions/todoActions'\n\nfunction* getTodos(action) {\n    try {\n        const todos = yield call(todoService.getTodos)\n        yield put(actions.getTodosSucceeded(todos))\n    } catch (error) {\n        yield put(actions.getTodosFailed(error))\n    }\n}\n\nfunction* deleteTodo(action) {\n    try {\n        yield call(todoService.deleteTodo, action.payload.id)\n        yield put(actions.deleteSucceeded(action.payload.id))\n    } catch (error) {\n        yield put(actions.deleteFailed(error))\n    }\n}\n\nfunction* toggleTodo(action) {\n    try {\n        const todo = yield call(todoService.toggleTodo, action.payload.id)\n        yield put(actions.toggleSucceeded(todo))\n    } catch (error) {\n        yield put(actions.toggleFailed(error))\n    }\n}\n\nfunction* addTodo(action) {\n    try {\n        const todo = yield call(todoService.addTodo, action.payload.todo)\n        yield put(actions.addTodoSucceeded(todo))\n    } catch (error) {\n        yield put(actions.addTodoFailed(error))\n    }\n}\n\nfunction* watchDeleteTodo() {\n    while (true) {\n        const action = yield take(types.DELETE_TODO)\n        yield call(deleteTodo, action)\n    }\n}\n\nfunction* watchGetTodos() { yield takeLatest(types.GET_TODOS, getTodos) }\nfunction* watchToggleTodo() { yield takeEvery(types.TOGGLE_TODO, toggleTodo) }\nfunction* watchAddTodo() { yield takeEvery(types.ADD_TODO, addTodo) }\n\nexport default function* rootSaga() {\n    yield all([\n        watchGetTodos(),\n        watchDeleteTodo(),\n        watchToggleTodo(),\n        watchAddTodo(),\n    ])\n}","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from '../reducers/rootReducer'\nimport rootSaga from '../sagas/todoSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(sagaMiddleware)\n    )\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App/App'\nimport store from './store/store'\nimport './styles/index.scss'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}